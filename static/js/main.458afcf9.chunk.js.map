{"version":3,"sources":["components/Posts.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","posts","loading","className","map","id","title","Pagination","postsPerPage","totalPosts","handlePagination","pageNumbers","i","Math","ceil","push","number","onClick","href","App","useState","setPosts","setLoading","currentPage","setCurrentPage","useEffect","fetch","then","res","json","data","catch","err","console","log","finally","indexOfLastPost","indexOfFirstPost","currentPosts","slice","length","pageNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAoBeA,MAlBf,YAAoC,IAAnBC,EAAkB,EAAlBA,MAEf,OAFiC,EAAXC,QAGb,4CAIP,oBAAIC,UAAU,kBAAd,SACGF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,qBAAaH,UAAU,kBAAvB,UACE,sBAAKA,UAAU,cAAf,UAA8BE,EAA9B,OACCC,IAFMD,SCiBFE,MA1Bf,YAGE,IAHmE,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,iBAExCC,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAYI,KAAKH,GAGnB,OACE,8BACE,oBAAIT,UAAU,aAAd,SACGQ,EAAYP,KAAI,SAAAY,GAAM,OACrB,oBAAiBb,UAAU,YAA3B,SACE,mBACEc,QAAS,kBAAMP,EAAiBM,IAChCE,KAAK,IACLf,UAAU,YAHZ,SAKGa,KANIA,WC0CJG,MAlDf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENnB,EAFM,KAECoB,EAFD,OAGiBD,oBAAS,GAH1B,mBAGNlB,EAHM,KAGGoB,EAHH,OAIyBF,mBAAS,GAJlC,mBAING,EAJM,KAIOC,EAJP,OAKUJ,mBAAS,IAAzBZ,EALM,oBAObiB,qBAAU,WAKRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,GAAW,GACXD,EAASS,MAEVC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEbG,SAAQ,WACPb,GAAW,QAbd,IAiBH,IAAMc,EAAkBb,EAAcf,EAChC6B,EAAmBD,EAAkB5B,EACrC8B,EAAerC,EAAMsC,MAAMF,EAAkBD,GAMnD,OACE,sBAAKjC,UAAU,iBAAf,UACE,oBAAIA,UAAU,oBAAd,wBACA,cAAC,EAAD,CACEF,MAAOqC,EACPpC,QAASA,IAEX,cAAC,EAAD,CACEM,aAAcA,EACdC,WAAYR,EAAMuC,OAClB9B,iBAdN,SAA0B+B,GACxBjB,EAAeiB,UCxBJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.458afcf9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Posts({ posts, loading }) {\r\n\r\n  if (loading) {\r\n    return <h2>Loading...</h2>\r\n  }\r\n\r\n  return (\r\n    <ul className='list-group mb-4'>\r\n      {posts.map(({ id, title }) => (\r\n        <li key={id} className='list-group-item'>\r\n          <div className='list-number'>{id}.</div>\r\n          {title}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\n\r\nfunction Pagination({ postsPerPage, totalPosts, handlePagination }) {\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <a\r\n              onClick={() => handlePagination(number)}\r\n              href='#'\r\n              className='page-link'\r\n            >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\n\nfunction App() {\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  function getPosts() {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(true);\n        setPosts(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  function handlePagination(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  return (\n    <div className='container mt-5'>\n      <h1 className='text-primary mb-3'>Pagination</h1>\n      <Posts\n        posts={currentPosts}\n        loading={loading}\n      />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        handlePagination={handlePagination}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}